{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","states.js","App.js","serviceWorker.js","index.js"],"names":["Card","image","name","capital","abv","className","alt","src","CardList","states","map","state","i","key","SearchBox","searchfield","searchChange","type","placeholder","onChange","App","onSearchChange","event","setState","target","value","filteredStates","filter","toLowerCase","startsWith","this","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"+OAceA,EAXF,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,QAASC,EAAU,EAAVA,IACpC,OACE,yBAAKC,UAAU,cACb,yBAAKC,IAAG,UAAKJ,GAAQK,IAAG,UAAKN,KAC3B,4BAAKC,GACL,uCAAaC,GACb,mCAASC,KCcFI,EAlBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACnB,OACC,yBAAKJ,UAAU,aACbI,EAAOC,KAAI,SAACC,EAAOC,GACnB,OACC,kBAAC,EAAD,CACCC,IAAKD,EACLX,MAAOQ,EAAOG,GAAGX,MACjBC,KAAMO,EAAOG,GAAGV,KAChBC,QAASM,EAAOG,GAAGT,QACnBC,IAAKK,EAAOG,GAAGR,WCLNU,EARG,SAAC,GAAkC,EAAhCC,YAAiC,IAApBC,EAAmB,EAAnBA,aACjC,OACC,yBAAKX,UAAU,UACd,2BAAOY,KAAK,SAASC,YAAY,eAAeC,SAAUH,MCLhDP,G,MAAS,CAClB,CACIR,MAAO,qBACPC,KAAM,UACNC,QAAS,aACTC,IAAK,MAET,CACIH,MAAO,sBACPC,KAAM,SACNC,QAAS,SACTC,IAAK,MAET,CACIH,MAAO,qBACPC,KAAM,UACNC,QAAS,UACTC,IAAK,MAET,CACIH,MAAO,sBACPC,KAAM,WACNC,QAAS,cACTC,IAAK,MAET,CACIH,MAAO,wBACPC,KAAM,aACNC,QAAS,aACTC,IAAK,MAET,CACIH,MAAO,sBACPC,KAAM,WACNC,QAAS,SACTC,IAAK,MAET,CACIH,MAAO,yBACPC,KAAM,cACNC,QAAS,WACTC,IAAK,MAET,CACIH,MAAO,sBACPC,KAAM,WACNC,QAAS,QACTC,IAAK,MAET,CACIH,MAAO,qBACPC,KAAM,UACNC,QAAS,cACTC,IAAK,MAET,CACIH,MAAO,qBACPC,KAAM,UACNC,QAAS,UACTC,IAAK,MAET,CACIH,MAAO,oBACPC,KAAM,SACNC,QAAS,WACTC,IAAK,MAET,CACIH,MAAO,mBACPC,KAAM,QACNC,QAAS,QACTC,IAAK,MAET,CACIH,MAAO,sBACPC,KAAM,WACNC,QAAS,cACTC,IAAK,MAET,CACIH,MAAO,qBACPC,KAAM,UACNC,QAAS,eACTC,IAAK,MAET,CACIH,MAAO,kBACPC,KAAM,OACNC,QAAS,aACTC,IAAK,MAET,CACIH,MAAO,oBACPC,KAAM,SACNC,QAAS,SACTC,IAAK,MAET,CACIH,MAAO,sBACPC,KAAM,WACNC,QAAS,YACTC,IAAK,MAET,CACIH,MAAO,uBACPC,KAAM,YACNC,QAAS,cACTC,IAAK,MAET,CACIH,MAAO,mBACPC,KAAM,QACNC,QAAS,UACTC,IAAK,MAET,CACIH,MAAO,sBACPC,KAAM,WACNC,QAAS,YACTC,IAAK,MAET,CACIH,MAAO,2BACPC,KAAM,gBACNC,QAAS,SACTC,IAAK,MAET,CACIH,MAAO,sBACPC,KAAM,WACNC,QAAS,UACTC,IAAK,MAET,CACIH,MAAO,uBACPC,KAAM,YACNC,QAAS,aACTC,IAAK,MAET,CACIH,MAAO,yBACPC,KAAM,cACNC,QAAS,UACTC,IAAK,MAET,CACIH,MAAO,sBACPC,KAAM,WACNC,QAAS,iBACTC,IAAK,MAET,CACIH,MAAO,qBACPC,KAAM,UACNC,QAAS,SACTC,IAAK,MAET,CACIH,MAAO,sBACPC,KAAM,WACNC,QAAS,UACTC,IAAK,MAET,CACIH,MAAO,oBACPC,KAAM,SACNC,QAAS,cACTC,IAAK,MAET,CACIH,MAAO,0BACPC,KAAM,gBACNC,QAAS,UACTC,IAAK,MAET,CACIH,MAAO,uBACPC,KAAM,aACNC,QAAS,UACTC,IAAK,MAET,CACIH,MAAO,uBACPC,KAAM,aACNC,QAAS,WACTC,IAAK,MAET,CACIH,MAAO,qBACPC,KAAM,WACNC,QAAS,SACTC,IAAK,MAET,CACIH,MAAO,2BACPC,KAAM,iBACNC,QAAS,UACTC,IAAK,MAET,CACIH,MAAO,yBACPC,KAAM,eACNC,QAAS,UACTC,IAAK,MAET,CACIH,MAAO,kBACPC,KAAM,OACNC,QAAS,WACTC,IAAK,MAET,CACIH,MAAO,sBACPC,KAAM,WACNC,QAAS,gBACTC,IAAK,MAET,CACIH,MAAO,oBACPC,KAAM,SACNC,QAAS,QACTC,IAAK,MAET,CACIH,MAAO,0BACPC,KAAM,eACNC,QAAS,aACTC,IAAK,MAET,CACIH,MAAO,yBACPC,KAAM,eACNC,QAAS,aACTC,IAAK,MAET,CACIH,MAAO,2BACPC,KAAM,iBACNC,QAAS,WACTC,IAAK,MAET,CACIH,MAAO,yBACPC,KAAM,eACNC,QAAS,SACTC,IAAK,MAET,CACIH,MAAO,uBACPC,KAAM,YACNC,QAAS,YACTC,IAAK,MAET,CACIH,MAAO,mBACPC,KAAM,QACNC,QAAS,SACTC,IAAK,MAET,CACIH,MAAO,kBACPC,KAAM,OACNC,QAAS,iBACTC,IAAK,MAET,CACIH,MAAO,qBACPC,KAAM,UACNC,QAAS,cACTC,IAAK,MAET,CACIH,MAAO,sBACPC,KAAM,WACNC,QAAS,WACTC,IAAK,MAET,CACIH,MAAO,wBACPC,KAAM,aACNC,QAAS,UACTC,IAAK,MAET,CACIH,MAAO,0BACPC,KAAM,gBACNC,QAAS,aACTC,IAAK,MAET,CACIH,MAAO,uBACPC,KAAM,YACNC,QAAS,UACTC,IAAK,MAET,CACIH,MAAO,qBACPC,KAAM,UACNC,QAAS,WACTC,IAAK,QCzQEgB,E,YA3Bd,aAAe,IAAD,8BACb,+CAODC,eAAiB,SAACC,GACjB,EAAKC,SAAS,CAAER,YAAaO,EAAME,OAAOC,SAP1C,EAAKd,MAAQ,CACZF,OAAQA,EACRM,YAAa,IAJD,E,sEAYJ,IAAD,OACFW,EAAiBjB,EAAOkB,QAAO,SAAChB,GACrC,OAAOA,EAAMT,KAAK0B,cAAcC,WAAW,EAAKlB,MAAMI,gBAGvD,OACC,yBAAKV,UAAU,kBACd,0CACA,kBAAC,EAAD,CAAWW,aAAcc,KAAKT,iBAC9B,kBAAC,EAAD,CAAUZ,OAAQiB,S,GAtBJK,aCMEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.cdd3d43b.chunk.js","sourcesContent":["import React from 'react';\n\n\nconst Card = ({ image, name, capital, abv }) => {\n  return (\n    <div className='state-item'>\n      <img alt={`${name}`} src={`${image}`} />\n        <h3>{name}</h3> \n        <p>Capital: {capital}</p> \n        <p>Abv: {abv}</p>\n    </div>\n  );\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst colors = [ '#33ff22' ];\n\nconst CardList = ({ states }) => {\n\treturn (\n\t\t<div className=\"main-wrap\">\n\t\t\t{states.map((state, i) => {\n\t\t\t\treturn (\n\t\t\t\t\t<Card\n\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\timage={states[i].image}\n\t\t\t\t\t\tname={states[i].name}\n\t\t\t\t\t\tcapital={states[i].capital}\n\t\t\t\t\t\tabv={states[i].abv}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t})}\n\t\t</div>\n\t);\n};\n\nexport default CardList;\n","import React from 'react';\n\nconst SearchBox = ({ searchfield, searchChange }) => {\n\treturn (\n\t\t<div className=\"search\">\n\t\t\t<input type=\"search\" placeholder=\"find a state\" onChange={searchChange} />\n\t\t</div>\n\t);\n};\n\nexport default SearchBox;\n","export const states = [\n    {\n        image: 'assets/alabama.svg',\n        name: 'Alabama',\n        capital: 'Montgomery',\n        abv: 'AL'\n    },\n    {\n        image: './assets/alaska.svg',\n        name: 'Alaska',\n        capital: 'Juneau',\n        abv: 'AK'\n    },\n    {\n        image: 'assets/arizona.png',\n        name: 'Arizona',\n        capital: 'Phoenix',\n        abv: 'AZ'\n    },\n    {\n        image: 'assets/arkansas.svg',\n        name: 'Arkansas',\n        capital: 'Little Rock',\n        abv: 'AR'\n    },\n    {\n        image: 'assets/california.svg',\n        name: 'California',\n        capital: 'Sacramento',\n        abv: 'CA'\n    },\n    {\n        image: 'assets/colorado.png',\n        name: 'Colorado',\n        capital: 'Denver',\n        abv: 'CO'\n    },\n    {\n        image: 'assets/connecticut.svg',\n        name: 'Connecticut',\n        capital: 'Hartford',\n        abv: 'CT'\n    },\n    {\n        image: 'assets/delaware.svg',\n        name: 'Delaware',\n        capital: 'Dover',\n        abv: 'DE'\n    },\n    {\n        image: 'assets/florida.svg',\n        name: 'Florida',\n        capital: 'Tallahassee',\n        abv: 'FL'\n    },\n    {\n        image: 'assets/georgia.svg',\n        name: 'Georgia',\n        capital: 'Atlanta',\n        abv: 'GA'\n    },\n    {\n        image: 'assets/hawaii.svg',\n        name: 'Hawaii',\n        capital: 'Honolulu',\n        abv: 'HI'\n    },\n    {\n        image: 'assets/idaho.svg',\n        name: 'Idaho',\n        capital: 'Boise',\n        abv: 'ID'\n    },\n    {\n        image: 'assets/illinois.svg',\n        name: 'Illinois',\n        capital: 'Springfield',\n        abv: 'IL'\n    },\n    {\n        image: 'assets/indiana.svg',\n        name: 'Indiana',\n        capital: 'Indianapolis',\n        abv: 'IN'\n    },\n    {\n        image: 'assets/iowa.svg',\n        name: 'Iowa',\n        capital: 'Des Moines',\n        abv: 'IA'\n    },\n    {\n        image: 'assets/kansas.svg',\n        name: 'Kansas',\n        capital: 'Topeka',\n        abv: 'KS'\n    },\n    {\n        image: 'assets/kentucky.svg',\n        name: 'Kentucky',\n        capital: 'Frankfort',\n        abv: 'KY'\n    },\n    {\n        image: 'assets/louisiana.svg',\n        name: 'Louisiana',\n        capital: 'Baton Rouge',\n        abv: 'LA'\n    },\n    {\n        image: 'assets/maine.svg',\n        name: 'Maine',\n        capital: 'Augusta',\n        abv: 'ME'\n    },\n    {\n        image: 'assets/maryland.svg',\n        name: 'Maryland',\n        capital: 'Annapolis',\n        abv: 'MD'\n    },\n    {\n        image: 'assets/massachusetts.svg',\n        name: 'Massachusetts',\n        capital: 'Boston',\n        abv: 'MA'\n    },\n    {\n        image: 'assets/michigan.svg',\n        name: 'Michigan',\n        capital: 'Lansing',\n        abv: 'MI'\n    },\n    {\n        image: 'assets/minnesota.png',\n        name: 'Minnesota',\n        capital: 'Saint Paul',\n        abv: 'MN'\n    },\n    {\n        image: 'assets/mississippi.svg',\n        name: 'Mississippi',\n        capital: 'Jackson',\n        abv: 'MS'\n    },\n    {\n        image: 'assets/missouri.svg',\n        name: 'Missouri',\n        capital: 'Jefferson City',\n        abv: 'MO'\n    },\n    {\n        image: 'assets/montana.svg',\n        name: 'Montana',\n        capital: 'Helena',\n        abv: 'MT'\n    },\n    {\n        image: 'assets/nebraska.svg',\n        name: 'Nebraska',\n        capital: 'Lincoln',\n        abv: 'NE'\n    },\n    {\n        image: 'assets/nevada.svg',\n        name: 'Nevada',\n        capital: 'Carson City',\n        abv: 'NV'\n    },\n    {\n        image: 'assets/newhampshire.svg',\n        name: 'New Hampshire',\n        capital: 'Concord',\n        abv: 'NH'\n    },\n    {\n        image: 'assets/newjersey.svg',\n        name: 'New Jersey',\n        capital: 'Trenton',\n        abv: 'NJ'\n    },\n    {\n        image: 'assets/newmexico.svg',\n        name: 'New Mexico',\n        capital: 'Santa Fe',\n        abv: 'NM'\n    },\n    {\n        image: 'assets/newyork.png',\n        name: 'New York',\n        capital: 'Albany',\n        abv: 'NY'\n    },\n    {\n        image: 'assets/northcarolina.svg',\n        name: 'North Carolina',\n        capital: 'Raleigh',\n        abv: 'NC'\n    },\n    {\n        image: 'assets/northdakota.svg',\n        name: 'North Dakota',\n        capital: 'Bismark',\n        abv: 'ND'\n    },\n    {\n        image: 'assets/ohio.svg',\n        name: 'Ohio',\n        capital: 'Columbus',\n        abv: 'OH'\n    },\n    {\n        image: 'assets/oklahoma.svg',\n        name: 'Oklahoma',\n        capital: 'Oklahoma City',\n        abv: 'OK'\n    },\n    {\n        image: 'assets/oregon.svg',\n        name: 'Oregon',\n        capital: 'Salem',\n        abv: 'OR'\n    },\n    {\n        image: 'assets/pennsylvania.svg',\n        name: 'Pennsylvania',\n        capital: 'Harrisburg',\n        abv: 'PA'\n    },\n    {\n        image: 'assets/rhodeisland.png',\n        name: 'Rhode Island',\n        capital: 'Providence',\n        abv: 'RI'\n    },\n    {\n        image: 'assets/southcarolina.svg',\n        name: 'South Carolina',\n        capital: 'Columbia',\n        abv: 'SC'\n    },\n    {\n        image: 'assets/southdakota.svg',\n        name: 'South Dakota',\n        capital: 'Pierre',\n        abv: 'SD'\n    },\n    {\n        image: 'assets/tennessee.svg',\n        name: 'Tennessee',\n        capital: 'Nashville',\n        abv: 'TN'\n    },\n    {\n        image: 'assets/texas.svg',\n        name: 'Texas',\n        capital: 'Austin',\n        abv: 'TX'\n    },\n    {\n        image: 'assets/utah.svg',\n        name: 'Utah',\n        capital: 'Salt Lake City',\n        abv: 'UT'\n    },\n    {\n        image: 'assets/vermont.svg',\n        name: 'Vermont',\n        capital: 'Montpellier',\n        abv: 'VT'\n    },\n    {\n        image: 'assets/virginia.svg',\n        name: 'Virginia',\n        capital: 'Richmond',\n        abv: 'VA'\n    },\n    {\n        image: 'assets/washington.svg',\n        name: 'Washington',\n        capital: 'Olympia',\n        abv: 'WA'\n    },\n    {\n        image: 'assets/westvirginia.png',\n        name: 'West Virginia',\n        capital: 'Charleston',\n        abv: 'WV'\n    },\n    {\n        image: 'assets/wisconsin.svg',\n        name: 'Wisconsin',\n        capital: 'Madison',\n        abv: 'WI'\n    },\n    {\n        image: 'assets/wyoming.png',\n        name: 'Wyoming',\n        capital: 'Cheyenne',\n        abv: 'WY'\n    },\n]","import React, { Component } from 'react';\nimport CardList from './components/CardList';\nimport SearchBox from './components/SearchBox';\nimport './App.css';\nimport { states } from './states';\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tstates: states,\n\t\t\tsearchfield: ''\n\t\t};\n\t}\n\n\tonSearchChange = (event) => {\n\t\tthis.setState({ searchfield: event.target.value });\n\t};\n\n\trender() {\n\t\tconst filteredStates = states.filter((state) => {\n\t\t\treturn state.name.toLowerCase().startsWith(this.state.searchfield);\n\t\t});\n\n\t\treturn (\n\t\t\t<div className=\"main-container\">\n\t\t\t\t<h1>The states</h1>\n\t\t\t\t<SearchBox searchChange={this.onSearchChange} />\n\t\t\t\t<CardList states={filteredStates} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}